@model InventoryManagementSystem.Models.Product

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_cashierlayout.cshtml";
}

<div class="row">
    <!-- Left Section: Order List Table -->
    <div class="col-lg-8 col-sm-12 tabs_wrapper">
        <div class="page-header">

            <div class="page-title">
                <div class="orderid">
                    <h4>Order List</h4>
                    <h5 id="transactionIdDisplay">Transaction id : #00000</h5>
                </div>
            </div>
        </div>
        <div class="card-body pt-0">
            <div class="totalitem">
                <h4 id="totalItems">Total items : #000</h4>
                <a  id="clearAll">Clear all</a>
            </div>

            <div class="product-table">
                <div class="table-responsive">
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Product Id</th>
                                <th>Product Name</th>
                                <th>Category</th>
                                <th>Brand</th>
                                <th>Price</th>
                                <th>Unit</th>
                                <th>Qty</th>
                                <th>Total</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody id="orderListBody">
                            <!-- Order items will be appended here dynamically -->
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <!-- Right Section: Controls and Product Lookup -->
    <div class="col-lg-4 col-sm-12">
        <div class="order-list">
            <!-- You may have additional order-related information here -->
        </div>
        <div class="card card-order">
            <div class="card-body">
                <input type="hidden" id="loggedInUserId" value="@ViewBag.UserId" />
                <input type="hidden" id="customerId" value="@ViewBag.CustomerId" />
                <input type="hidden" id="paymentMethodId" value="0" />
                <div class="row">
                    <div class="col-12">
                        <a asp-controller="Customers" asp-action="Create" class="btn btn-adds">
                            <i class="fa fa-plus me-2"></i>Add Customer
                        </a>
                    </div>
                    <div class="col-12">
                        <a asp-controller="Returnitems" asp-action="Create" class="btn my-btn-return">
                            <i class="fa fa-plus me-2"></i>Add Return Item
                        </a>
                    </div>
                    <!-- Product ID Lookup Dropdown -->
                    <div class="col-lg-12">
                        <div class="select-split">
                            <div class="select-group w-100">
                                <label for="ProductId">Search Product ID</label>
                                <select id="ProductId" class="form-control select2">
                                    <option value="">Select Product ID</option>
                                    @foreach (var item in ViewBag.ProductId as SelectList)
                                    {
                                        <option value="@item.Value">@item.Text</option>
                                    }
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="col-12">
                        <div class="text-end">
                            <a class="btn btn-scanner-set">
                                <img src="~/img/icons/scanner1.svg" alt="img" class="me-2">
                                Scan barcode
                            </a>
                        </div>
                    </div>
                </div>
            </div>
            <div class="split-card"></div>
            <div class="split-card"></div>
            <div class="card-body pt-0 pb-2">
                <div class="setvalue">
                    <ul>
                        <li>
                            <h5>Subtotal</h5>
                            <h6 id="subtotal" data-subtotal="00.00">Rs 00.00</h6>
                        </li>
                        <li>
                            <h5>Tax</h5>
                            <h6 id="tax" data-tax="00.00">Rs 00.00</h6>
                        </li>
                        <li class="total-value">
                            <h5>Total</h5>
                            <h6 id="totalAmount" data-total="00.00">Rs 00.00</h6>
                        </li>
                    </ul>
                </div>
                <div class="setvaluecash">
                    <ul>
                        <li>
                            <a class="paymentmethod" id="cash" >
                                <img src="~/img/icons/cash.svg" alt="img" class="me-2">
                                Cash
                            </a>
                        </li>
                        <li>
                            <a class="paymentmethod" id="card">
                                <img src="~/img/icons/debitcard.svg" alt="img" class="me-2">
                                Card
                            </a>
                        </li>
                        <li>
                            <a href="javascript:void(0);" class="paymentmethod">
                                <img src="~/img/icons/scan.svg" alt="img" class="me-2">
                                Scan
                            </a>
                        </li>
                    </ul>
                </div>
                <div class="btn-totallabel">
                    <a id="checkoutBtn"> Checkout</a>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Include jQuery and Select2 from CDN -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/css/select2.min.css" rel="stylesheet" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/js/select2.min.js"></script>

<script>
    $(document).ready(function () {
        // Initialize the Select2 dropdown for product lookup
        $("#ProductId").select2({
            placeholder: "Select Product ID",
            allowClear: true
        });

        // When a product is selected, fetch details and add to the order list table
        $("#ProductId").on("change", function () {
            var productId = $(this).val();
            if (productId) {
                $.ajax({
                    url: '/POS/GetProductDetails', // Your endpoint to fetch product details
                    type: 'GET',
                    data: { id: productId },
                    success: function (product) {
                        if (product) {
                            addProductToOrderList(product);
                        } else {
                            alert('No product found with the selected ID.');
                        }
                    },
                    error: function () {
                        alert('Error fetching product details.');
                    }
                });
            }
        });

        $(".paymentmethod").on("click", function () {
            let paymentId = 0;
            let selected = $(this).attr("id");

            if (selected === "cash") {
                paymentId = 1;
            }

            else if (selected === "card") { 
                paymentId = 2;
            }

            $("#paymentMethodId").val(paymentId);

        })

        $("#checkoutBtn").on("click", function () {
            let loggedInUserId = $("#loggedInUserId").val(); // Get UserId dynamically
            let customerId = $('#customerId').val() || 0 ;
            let paymentMethodId = $('#paymentMethodId').val() || 0;
            let subtotal = parseFloat($("#subtotal").attr("data-subtotal")) || 0;
            let tax = parseFloat($("#tax").attr("data-tax")) || 0;
            let totalAmount = parseFloat($("#totalAmount").attr("data-total")) || 0;

            let products = [];
            $("#orderListBody tr").each(function () {
                let productId = $(this).data("product-id");
                let quantity = parseInt($(this).find(".order-qty").val());
                let price = parseFloat($(this).find("td:nth-child(5)").text());

                if (productId && quantity > 0 && price > 0) {
                    products.push({ ProductId: productId, Quantity: quantity, Price: price });
                }
            });
            let transactionData = {
                UserId: loggedInUserId,  
                CustomerId: customerId, 
                PaymentMethodId: paymentMethodId,
                TransactionDate: new Date().toISOString(),
                Subtotal: subtotal,
                Tax: tax,
                TotalAmount: totalAmount,
                Products: products
            };

            console.log("Transaction Data Sent:", JSON.stringify(transactionData));

            $.ajax({
                url: "/Checkout",
                type: "POST",
                contentType: "application/json",
                data: JSON.stringify(transactionData),
                success: function (response) {
                    alert("Transaction Successful!");
                    location.reload();
                },
                error: function (xhr, status, error) {
                    console.log("XHR:", xhr);
                    console.log("Status:", status);
                    console.log("Error:", error);
                    alert("Error: " + xhr.responseText);
                }
            });
        });





        // Function to append product details as a new row in the order list table
        function addProductToOrderList(product) {
            var newRow = `
                    <tr data-product-id="${product.productId}">
                        
                        <td>${product.productId}</td>
                        <td>${product.itemName}</td>
                        <td>${product.category ? product.category.categoryName : "N/A"}</td>
                        <td>${product.brand}</td>
                        <td>${product.sellingPrice}</td>
                        <td>${product.unit}</td>
                        <td>
                            <input type="number" value="1" min="1" class="form-control order-qty" style="width: 60px;">
                        </td>
                        <td class="row-total">${product.sellingPrice}</td>
                        <td>
                            <button type="button" class="btn btn-danger btn-sm remove-item">Remove</button>
                        </td>
                    </tr>
                `;
            $("#orderListBody").append(newRow);
            updateOrderTotals(); // Update totals after adding a new row
        }

        // Remove item from the order list when the "Remove" button is clicked
        $("#orderListBody").on("click", ".remove-item", function () {
            $(this).closest("tr").remove();
            updateOrderTotals(); // Update totals after removal
        });

        // Update row total when quantity changes
        $("#orderListBody").on("change", ".order-qty", function () {
            var qty = parseInt($(this).val());
            var row = $(this).closest("tr");
            var price = parseFloat(row.find("td:nth-child(5)").text());
            var total = qty * price;
            row.find(".row-total").text(total.toFixed(2));
            updateOrderTotals(); // Update totals after quantity change
        });

        // Clear all button: remove all rows from the order list table
        $("#clearAll").on("click", function (e) {
            e.preventDefault();
            $("#orderListBody").empty();
            updateOrderTotals(); // Update totals after clearing the table
        });

        // Function to update the total number of items in the order list table and calculate totals
        function updateOrderTotals() {
            var subtotal = 0;
            $("#orderListBody tr").each(function () {
                var rowTotal = parseFloat($(this).find(".row-total").text());
                if (!isNaN(rowTotal)) {
                    subtotal += rowTotal;
                }
            });

            var taxRate = 0.10; // Example: 10% tax rate
            var tax = subtotal * taxRate;
            var total = subtotal + tax;

            // Update the display and data attributes
            $("#subtotal").text("Rs " + subtotal.toFixed(2)).attr("data-subtotal", subtotal.toFixed(2));
            $("#tax").text("Rs " + tax.toFixed(2)).attr("data-tax", tax.toFixed(2));
            $("#totalAmount").text("Rs " + total.toFixed(2)).attr("data-total", total.toFixed(2));

            // Update total items count
            $("#totalItems").text("Total items : " + $("#orderListBody tr").length);
        }


        // Optionally, fetch a new transaction id from the server
        $.ajax({
            url: '/POS/GetNewTransactionId', // Endpoint to get a new transaction id
            type: 'GET',
            success: function (data) {
                if (data && data.transactionId) {
                    $("#transactionIdDisplay").text("Transaction id : #" + data.transactionId);
                }
            },
            error: function () {
                console.log("Error fetching new transaction id.");
            }
        });
    });
</script>


